=head1 NAME

VH Graph - Graph Plotting Class for PHP3

=head1 SYNOPSIS

include("/patch/to/the/class/class.graph");

=head1 DESCRIPTION

B<VH Graph> is a I<PHP3> class to create and display GIF graph
The following classes for graphs are defined:

=over 4

=item C<bargraph>

Create a bar (column) char.

=item C<linepoints>

Create line graph, linepoints graph and points graph.

=item C<areagraph>

Create an area graph.

=item C<mixgraph>

Actually there is no mixgraph. But you can create a mixture of
different chart on top of each other.

=item C<piegraph>

Create a pie chart.

=back

=head1 EXAMPLES

Please check out http://www.vhconsultants.com/graph.htm or see
examples in the distribution.

=head1 USAGE

Only 4 function calls are needed to plot a graph. You need an 
array of data either from database or other sources. Define the
x values first, and followed by arrays of y values.

    $data = array( 
              array("Jan","Feb","March","April","May","June"),
              array( 1.0 , 2.3 ,  4.1  , -1.8  , 0.4 , 2.8  ),
              array( 1.2 , 0.3 ,  3.2  ,  1.7  , 1.4 , 1.8  ),
              array( 0.3 , 3.2 ,  2.5  ,  1.9  , 1.9 , 2.0  ));

Start a new graph with the B<phpplot()> call and followed by B<phpdata()>
to parse the data.

    phpplot(array(
                     "grid"       => true,
                     "cubic"      => true,
                     "size"       => array(400,250),
                     "box_showbox"=> true,
                     "title_text" => "Bar Graph",
                     "yaxis_labeltext"=> "Revenue (in million $)",
                     "xaxis_labeltext"=> "Months",
                     "legend_shift"   => array(-300,10)
            ));

    phpdata($data);

B<phpplot()> takes an optional argument, an array, to define global settings
for the graph. Individual object's attributes need to be set in this 
function call also. Like I<xaxis_labeltext>, where I<xaxis> is the object,
and I<labeltext> is the attribute to define the x label.

B<phpdata()> takes one required argument, the data array. If the range of
y axis or y2 axis is not set in B<phpplot()>, it will auto generate the
range.

Plotting the graph is simply call one of the predefined drawing classes
with B<phpdraw()>

     phpdraw(bargraph,
             array("drawsets" => array(1,2),
                   "legend"=> array("First Half Revenue",
                                    "Last Year Result"),
                   "barspacing"=> 8,
                   "showvalue"=> false )
             );

B<phpdraw()> takes two arguments. The first one should be one of the
followings: B<bargraph>, B<linepoints>, B<areagraph>, B<piegraph>.
Multipul B<phpdraw()>s can be called to draw a mixed chart.

The last call to complete this graph is B<phpshow()> which takes an
optional argument - the output gif filename. If called without argument,
the gif data will be output to stdout and proceeded by 
I<"Content-type: image/gif">.

=head1 DEFTAIL

=head2 Global attributes

=over 4

=item interlace I<true|false>

Set gif output to interlace if set to I<true>. Default is I<true>.

=item transparent I<true|false>

Set background to transparent. Default is I<false>.

=item background I<color>

Default background is I<white>. Colors are defined in global variable
$RGB which can be overwrite by users in the script. 

Available colors are 
I<"white","black","gray","lgray","dgray","blue","lblue","dblue",
"yellow","lyellow","dyellow","green","lgreen","dgreen","red",
"lred","dred","purple","lpurple","dpurple","gold","pink","dpink",
"marine","cyan","lcyan","maroon","olive","navy","teal","silver",
"lime","khaki","lsteelblue","seagreen","lseagreen","skyblue",
"lskyblue","slateblue","slategray","steelblue","tan","violet",
"wheat">

Redefine $RGB like the following,

     $RGB = array(
                    "slategray" => array(0x70,0x80,0x90),
                    "steelblue" => array(0x46,0x82,0xB4)
	     );

=item size I<array(width,height)>

Set the size of the gif graph. Default to I<array(400,300)>.

=item cubic I<true|false>

If true, draw 3 D plots. Default to I<false>

=item box I<true|false>

If true, draw the outline box. Default to I<true>. If in B<3 D>
mode, draw box. Default for piegraph is I<false>.

=item grid I<true|false>

Draw grid. Default to I<true>. Default for piegraph is I<false>.

=item title I<true|false>

Draw title. Default to I<true>

=item xaxis I<true|false>

Draw xaxis. Default to I<true>. Default for piegraph is I<false>.

=item yaxis I<true|false>

Draw yaxis. Default to I<true>. Default for piegraph is I<false>.

=item y2axis I<true|false> - obsolete

This attributes is no longer honored in the format of global attributes
starting from 1.0Beta Release 1.  You may use it in B<phpdraw()> to 
draw a second Y axis.

=item legend I<true|false>

Draw legend for each dataset. Default to I<true>.

=item ymarkset I<array()>

Set the marks for y axis. Default will be generated from B<phpdata()>
call.

=item y2markset I<array()>

Set the marks for the second y axis. Default will be generated from
B<phpdata()> call.

=item yrange I<array(start,end,stip)>

Set the range for y axis. If ymarkset is not set, the markset will
be generated from yrange. Default is set in B<phpdata()>.

=item y2range I<array(start,end,stip)>

Range for the second y axis.

=item colorset I<array(color1,color2,..)>

The colors for the datasets. Default is I<array("cyan","lred","green","lblue","pink","purple","gold")>. Sorry not much taste in color. You can redefine it.

=item ttf I<fontname>

The font file name without the ttf suffix. Need to set the global
ENV $fontpath which is default to "./".

=item zeroline I<true|false>

Draw the zero line. Default to I<true>.

=item zeroaxis I<true|false>

Draw x axis at the zero line. Default to I<false>.

=item lepos I<array(x,y)>

Set the legend's position in the plot. Left up corner is (0,0).
Default is set by the program.

=item ledir I<x|y>

Direction of the legend. Default is set by the program.

=back

=head2 Objects' attributes

=over 4

=item Base object attributes

Base object attributes is inherited by all the objects.

=over 4

=item * color I<color>

Set the color for the object. Default to I<black>.

=item * text I<string>

Set the string. Default to I<"My Plot">.

=item * textcolor I<color>

Set the color of the string. Default to I<black>.

=item * textsize I<int>

Set the size of the ttf font size. Default I<12>.

=item * pos I<array(x,y)>

Set the position of the object in the plot. Default is auto placement.

=item * shift I<array(x,y)>

Set relative x and y shifting from the position. Default is I<array(0,0)>.

=item * scale I<float>

Scale the size of the object. May not applicable in all the cases. Default
value is I<1.0>.

=item * ttf I<TTF font>

Set the true type font for this object. Default to the global ttf settings
if it is set.

=back

=item box object

=over 4

=item * showbox I<true|false>

Draw the box if set to true. Default to I<false>.

=item * boxsize I<small|medium|big>

Set the box size which define the drawing region of the plot. Default
to I<medium>.


=item * xscale I<float>

Setting the x direction scale for the box. Default to I<1.0>.

=item * yscale I<float>

Setting the y direction scale for the box. Default to I<1.0>.

=item * shadow I<true|false>

Draw a shadow for the box. Not appliable in B<3 D> mode. Default to 
I<false>.

=back

=item grid object

=over 4

=item * xgrid I<true|false>

Turn x direction grid on if set true. Default is I<true>.

=item * ygrid I<true|false>

Turn y direction grid on if set true. Default is I<true>.

=item * xdash I<true|false>

Draw x direction grid as dashed line. Default is I<false>.

=item * ydash I<true|false>

Draw y direction grid as dashed line. Default is I<false>.

=item * mxgrid I<number>

Number of grids for each x tick. Default to I<1>.

=item * mygrid I<number>

Number of grids for each y tick. Default to I<1>.

=back

=item title object

=over 4

=item * location I<topcenter|bottomcenter>

Location of the title. Default to I<topcenter>.

=item * textfont I<1-5>

Use build-in textfont is ttf is not set. Default is I<4>.

=item * textsize I<int>

TTF font size.  Default to I<18>.

=item * border I<true|false>

Draw border around the title. Default to I<false>. 

=item * degree I<0-360>

Only meaningful when used with TTF fonts. Default to I<zero>.
For build in fonts, draw a verticle string for any I<degree> != 0.

=back

=item xaxis object

=over 4

=item * axis I<true|false>

Draw the axis line. Default to I<true>.

=item * tick I<true|false>

Draw ticks. Default to I<true>.

=item * ticklength I<number>

Length of the ticks.  Default to I<4>.

=item * tickskip I<number>

Skip of ticks. Default is no skip and value is set to I<1>.

=item * mark I<true|false>

Draw the mark. Default to I<true>.

=item * markcolor I<color>

Mark color. Default to I<black>.

=item * markfont I<1-5>

Build in font for mark. Default to I<2>.

=item * markttf I<TTF font>

Use TTF font for the mark. Default to global attribute I<ttf>
if it is set.

=item * marksize I<TTF size>

Size of the TTF font for mark. Default value is I<10>.

=item * markshift I<array(x,y)>

Shift value for the mark. Default to I<array(0,0)>.

=item * label I<true|false>

Draw label. Default to I<true>.

=item * labelfont I<1-5>

Build in font for label. Default to I<3>.

=item * labeltext I<string>

Text string for the label. Default is I<X axis>.

=item * labelcolor I<color>

Color for the label text. Default is I<black>.

=item * labelsize I<TTF font size>

TTF font size for the label. Default value is I<14>.

=item * labelpos I<center|right>

Position of the label. Default to I<center>.

=item * labeldegree I<0-360>

Rotating the label. Only meaningful in TTF fonts situation.
Default is I<0>.

=item * labelshift I<array(x,y)>

Relative shift for label. Default is I<array(0,0)>.

=item * labelttf I<TTF font>

TTF font for label. Default to global I<ttf> value if it is
set.

=item * fillcolor I<color>

Set the fillcolor for B<3 D> mode. Default to I<lgray>.

=back

=item yaxis object


=over 4

=item * Note

Most of attributes are sames as those of xaxis object.


=item * labeltext I<string>

Text string for the label. Default is I<Y axis>.

=item * labeldegree I<0-360>

Default to I<90>.

=item * fillcolor I<color>

Default value is I<white>.

=back

=item y2axis object

=over 4

=item * Note

Same as the yaxis object.

=back


=item legend object

=over 4

=item * type I<1-4,10>

The legend point type. Default is I<10> - a square.

=item * width I<number>

Size of the legend point type. Default value I<10>.

=item * filled I<true|false>

Use filled point. Default is I<true>.

=back

=back

=head2 Classes

Currently, there are B<bargraph>,B<linepoints>,B<areagraph>,
B<piegraph>.

=over 4

=item B<common attributes for all the classes>

=over 4

=item * drawsets I<array(n1,n2,...)>

Draw the datasets I<n1,n2 ...>. Default to I<array(1)>.

=item * y2axis I<true|false>

Draw the second Y axis. Default value is I<false>. Second Y axis
is used for the last set of dataset for this graph.

=item * showvalue I<true|false>

Plot the value for each point/bar also. Default is I<false>

=item * valuefont I<1-5>

Build in font for the plotting the value. Default to I<3>.

=item * valuecolor I<color>

Color of the value. Default to I<black>.

=item * valuesize I<TTF font size>

TTF font size for the value. Default is I<10>.

=item * valuettf I<TTF font>

TTF font for the value. Default is the global I<ttf> font if
it is set.

=item * legend I<array(string,string,...)>

Legend text for the datasets. Default is I<none>.

=item * legendfont I<1-5>

Build in font. Default is I<3>.

=item * legendsize I<TTF font size>

Default is I<10>.

=item * legendttf I<TTF font>

Default is the global I<ttf> font if it is set.

=item * legendscale I<number>

Size of the legend point. Default to I<1>.

=back

=item B<bargraph>

=over

=item * barmode I<side|stack|overwrite>

Drawing mode for multipul columns. Default is I<side>.

=item * barspacing I<int>

Space between bars. Default is I<zero>. 

=back

=item B<linepoints>

=over 4

=item * showline I<true|false>

Draw line. Default is I<true>.

=item * showpoint I<true|false>

Draw points. Default is I<true>.

=item * linewidth I<number>

Width of the lines. Default is I<1>.

=item * filled I<true|false>

Draw filled points. Default is I<true>.

=back

=item B<areagraph>

=over 4

=item * Note.

Most of the linepoints attributes are valid here.

=back


=item B<piegraph>

=over 4

=item * showmark I<true|false>

Show the percentage on the pie. Default to I<true>.

=item * markfont I<1-5>

Font for the mark. Default to I<3>.

=item * markcolor I<color>

Color for the mark. Default to I<black>.

=item * marksize I<TTF font size>.

TTF font size. Default to I<10>.

=item * markshift I<array(x,y)>

Shift for the mark. Default to I<array(0,0)>.

=item * markttf I<TTF font>

TTF font for the mark.

=item * showlabel I<true|false>

Show the label. Default to I<true>. You can define label attributes
labelfont, labelcolor, labelshift, labelsize, labelttf.

=item * scale I<float>

Scale the size of the pie. Default to I<1.0>.

=item * radius I<int>

Set the size of the pie. Default is generated by program.

=item * thickness I<int>

Set the thickness of the 3D pie. Default to I<12>.

=back



=back


=head1 Contact info

B<email>: php@earthlink.net

B<web>:  http://www.vhconsultants.com/

=head1 Copyright

Copyright (C) 1999 - 2000 Robbin Zhang  All rights reserved. 

This package is free for personal usage. See the COPYRIGHT
in the package for detail.
